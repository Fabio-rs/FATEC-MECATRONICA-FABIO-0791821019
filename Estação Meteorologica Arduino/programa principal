/*
En mi caso la mediciones fueron:
90° = 346
45° = 172
0° = 0
Por regla de 3:
  346   = 90
lectura = X
Obtenemos la fórmula:
X =  90 * lectura
   ******
        346
// tela lcd        
*/
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// DEFINIÇÕES
#define endereco  0x27 // Endereços comuns: 0x27, 0x3F
#define colunas   16
#define linhas    2

// INSTANCIANDO OBJETOS
LiquidCrystal_I2C lcd(endereco, colunas, linhas);

//anemometro

// --- Constantes ---
const float pi = 3.14159265;     //Número de pi
int period = 2000;               //Tempo de medida(miliseconds)
int delaytime = 2000;            //Invervalo entre as amostras (miliseconds)
int radius = 147;                //Raio do anemometro(mm)


// --- Variáveis Globais ---
unsigned int Sample  = 0;        //Armazena o número de amostras
unsigned int counter = 0;        //Contador para o sensor  
unsigned int RPM = 0;            //Rotações por minuto
float speedwind = 0;             //Velocidade do vento (km/h)
float windspeed = 0;             //Velocidade do vento (milhas)


// --- Configurações Inicias ---

long int ta;
void setup() {
  lcd.init(); // INICIA A COMUNICAÇÃO COM O DISPLAY
  lcd.backlight(); // LIGA A ILUMINAÇÃO DO DISPLAY
  lcd.clear(); // LIMPA O DISPLAY


   pinMode(3, INPUT);        //configura o digital 2 como entrada
  digitalWrite(3, HIGH);    //internall pull-up active
}
float angulo = 0.0;




void loop(){


//if (millis () > ta + 5000)
//ta = millis();


 
  int lectura = analogRead(A1);
  lectura = lectura - 149;
  angulo = (90.0 * lectura) / 346;
  lcd.setCursor(0, 0); // POSICIONA O CURSOR NA PRIMEIRA COLUNA DA LINHA 1
  lcd.print("Angulo");
  lcd.print(" = ");
  lcd.print(angulo);
  lcd.print("°");

  

  Sample++;
  Serial.print(Sample);
  Serial.print(": Start measurement...");
  windvelocity();
  Serial.println("   finished.");
  Serial.print("Counter: ");
  Serial.print(counter);
  Serial.print(";  RPM: ");
  RPMcalc();
  Serial.print(RPM);
  Serial.print(";  Wind speed: ");              
  
//*****************************************************************
//print km/h  
  SpeedWind();
  Serial.print(speedwind);
  Serial.print(" [km/h] ");  
  Serial.println();

  //*****************************************************************
//print milhas  a unica que aparece no visor lcd
  WindSpeed();
  lcd.setCursor(0, 1); // POSICIONA O CURSOR NA PRIMEIRA COLUNA DA LINHA 2
 // lcd.print(windspeed);
  lcd.print("VelVent"); 
  lcd.print(" = ");
  lcd.print(windspeed);
  lcd.print("NM");

 // delay(delaytime);                        //taxa de atualização
} 
  

 //end setup

//Função para medir velocidade do vento
void windvelocity()
{
  speedwind = 0;
  windspeed = 0;
  
  counter = 0;  
  attachInterrupt(0, addcount, RISING);
  unsigned long millis();       
  long startTime = millis();
  while(millis() < startTime + period) {}
}


//Função para calcular o RPM
void RPMcalc()
{
  RPM=((counter)*60)/(period/1000);  // Calculate revolutions per minute (RPM)
}



//Velocidade do vento em km/h
void SpeedWind()
{
  speedwind = (((4 * pi * radius * RPM)/60) / 1000)*3.6;  //Calcula velocidade do vento em km/h
 
} //end SpeedWind

//Velocidade do vento em milhas
void WindSpeed()
{
  windspeed = ((((4 * pi * radius * RPM)/60) / 1000)*3.6) / 1.61;  //Calcula a velocidade do vento em milhas
 
} //end WindSpeed


//Incrementa contador
void addcount()
{
  counter++;
} 
